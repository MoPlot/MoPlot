[{"path":"https://github.com/MoPlot/MoPlot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 MoPlot authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"moplotoneway","dir":"Articles","previous_headings":"","what":"MoPlotOneWay","title":"One_Way_MoPlot","text":"MoPlotOneWay() function visualizing results linear model one categorical predictor one numeric dependent variable. takes input model created lm() produces plot highlights group means associated uncertainty using bars, visually emphasizes significant contrasts colored lines. Optionally, raw data points can displayed plot. secondary panel shows model coefficients, including standardized beta values effect sizes Cohen’s d, allowing clear informative summary model’s findings. MoPlotOneWay() function supports variety contrast coding schemes categorical predictors, including treatment coding (dummy coding), sum zero coding, Helmert coding, reverse Helmert coding, polynomial coding, sliding difference coding, customized coding.","code":""},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"default-treatment-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"1 Default Treatment coding","title":"One_Way_MoPlot","text":"Treatment coding, dummy coding common way represent categorical variables regression models. transforms categorical predictor k levels k − 1 binary (0/1) variables, comparing one level reference (baseline) category. following example uses classic iris dataset treatment contrasts shows plot without raw data points coefficient panel, using significance level 0.05:  plot, including raw data points coefficient panel, also 0.05 significance level:","code":"library(MoPlot)  # Using Iris data data(iris) iris$Species <- factor(iris$Species) contrasts(iris$Species) <- contr.treatment(3)  # Fit the model model <- lm(Sepal.Length ~ Species, data = iris)  # MoPlotting MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Species is the categorical predictor (represented on the x-axis with its levels), #>  and Sepal.Length is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is treatment, which compares each group mean against #>  the baseline mean of setosa (the first level of the predictor). #>  Blue dots indicate the expected values (means) for each group, while the error bars #>  represent the uncertainty associated with these estimates. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with a significance threshold of 0.05 for the first type of error. # MoPlotting MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Species is the categorical predictor (represented on the x-axis with its levels), #>  and Sepal.Length is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is treatment, which compares each group mean against #>  the baseline mean of setosa (the first level of the predictor). #>  Blue dots indicate the expected values (means) for each group, while the error bars #>  represent the uncertainty associated with these estimates. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with a significance threshold of 0.05 for the first type of error."},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"sum-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"2 Sum coding","title":"One_Way_MoPlot","text":"Sum coding another way represent categorical variables regression models. Unlike treatment coding, sum coding compares level overall mean rather specific reference group. following example uses iris dataset sum contrasts, showing plot without raw data points coefficient panel significance level 0.1  plot including raw data points coefficient panel:","code":"# Using Sum coding contrasts(iris$Species) <- contr.sum(3)  # Fit the model model <- lm(Sepal.Length ~ Species, data = iris)  # MoPlotting MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.1) #> This graphical representation depicts the linear model, with #>  Species as the categorical predictor (levels shown on the x-axis), #>  and Sepal.Length as the numerical dependent variable (values displayed on the y-axis). #>  The contrast type is sum, where each group mean is compared to #>  the intercept, which serves as the baseline. #>  Blue dots represent the expected values (means) for each group, and error bars capture #>  the uncertainty associated with these estimates. #>  The dashed purple line marks the intercept expected value. #>  The green error bars highlight significant contrasts, with 0.1 as the threshold for the first type of error. # MoPlotting MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.1)"},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"helmert-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"3 Helmert coding","title":"One_Way_MoPlot","text":"Helmert coding contrast coding scheme level categorical variable compared mean previous levels. following example uses generated dataset (using DatasetOne()) Helmert contrasts. first shows plot without raw data points coefficient panel significance level 0.05:","code":"# Using a custom function to generate data with four groups DT <- DatasetOne(n_sample = 20, means = c(120, 135, 115, 120), sds = 20) DT$Ind <- as.factor(DT$Ind) contrasts(DT$Ind) <- contr.helmert(4)  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting sum MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation depicts the linear model, with #>  Ind as the categorical predictor (levels are represented on the x-axis), #>  and Dep as the numerical dependent variable (values are shown on the y-axis). #>  The applied contrast type is helmert. In this type of contrast, each group mean is compared to #>  the cumulative mean of all previous groups. #>  Blue dots represent the expected values (means) for the cumulative means, #>  while orange dots represent the expected values (means) for each individual group. #>  Error bars indicate the uncertainty associated with each expected value. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with 0.05 serving as the threshold for the first type of error."},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"reverse-helmert-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"4 Reverse Helmert coding","title":"One_Way_MoPlot","text":"Reverse Helmert coding compares level mean subsequent levels. reverse Helmert coding can useful ordered categorical predictors. example uses custom dataset reverse Helmert contrasts, showing plot without raw data coefficient panel 0.05 significance level: plot including raw data points coefficient panel:","code":"# Using Reverse Helmert coding ReverseHelmert <- function(n) {   mat <- matrix(0, n, n - 1)   for (i in 2:n) {     mat[i, i - 1] <- 1     mat[1:(i - 1), i - 1] <- -1 / (i - 1)   }   return(mat) } contrasts(DT$Ind) <- ReverseHelmert(4)  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting reverse Helmert MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation depicts the linear model, with #>  Ind as the categorical predictor (levels are represented on the x-axis), #>  and Dep as the numerical dependent variable (values are shown on the y-axis). #>  The applied contrast type is ReverseHelmert. In this type of contrast, each group mean is compared to #>  the cumulative mean of all previous groups. #>  Blue dots represent the expected values (means) for the cumulative means, #>  while orange dots represent the expected values (means) for each individual group. #>  Error bars indicate the uncertainty associated with each expected value. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with 0.05 serving as the threshold for the first type of error. MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05)"},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"polynomial-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"5 Polynomial coding","title":"One_Way_MoPlot","text":"Polynomial coding tests trends across ordered factor levels. compares levels based polynomial contrasts (linear, quadratic, cubic, etc.). following example uses polynomial contrasts custom dataset, showing plot without raw data coefficients significance level 0.05:  including raw data coefficients:","code":"# Using Polynomial coding contrasts(DT$Ind) <- contr.poly(4)  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting polynomial contrasts MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Ind is the categorical predictor (shown on the x-axis with its levels), #>  and Dep is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is poly, which decomposes the overall trend across levels into polynomial components #>  such as linear, quadratic, and cubic trends. #>  Each plot shows how well a trend of a given degree captures the pattern in the data. #>  The lines interpolate the expected values based on polynomial regression, #>  and are shown in green when the corresponding component is statistically significant (p <  0.05 ). #> [1] \"Use the ARROWS to see the different plots\" MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Ind is the categorical predictor (shown on the x-axis with its levels), #>  and Dep is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is poly, which decomposes the overall trend across levels into polynomial components #>  such as linear, quadratic, and cubic trends. #>  Each plot shows how well a trend of a given degree captures the pattern in the data. #>  The lines interpolate the expected values based on polynomial regression, #>  and are shown in green when the corresponding component is statistically significant (p <  0.05 ). #> [1] \"Use the ARROWS to see the different plots\""},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"sliding-difference-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"6 Sliding Difference coding","title":"One_Way_MoPlot","text":"Sliding difference coding compares adjacent levels categorical variable, useful detect stepwise differences. following example applies sliding difference contrasts:  raw data coefficients included:","code":"# Using Sliding Difference coding contrasts(DT$Ind) <- MASS::contr.sdif(4)  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting sliding difference contrasts MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #> Ind is the categorical predictor (levels represented on the x-axis), #> and Dep is the numerical dependent variable (values shown on the y-axis). #> The contrast type applied is sdif, where each group mean is compared to #> the mean of the subsequent group. #> Blue squares represent the estimated differences (Beta) between adjacent groups; #> green segments denote significant contrasts (p < 0.05). #> Error bars show uncertainity around each group mean; the dashed line is the intercept. MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #> Ind is the categorical predictor (levels represented on the x-axis), #> and Dep is the numerical dependent variable (values shown on the y-axis). #> The contrast type applied is sdif, where each group mean is compared to #> the mean of the subsequent group. #> Blue squares represent the estimated differences (Beta) between adjacent groups; #> green segments denote significant contrasts (p < 0.05). #> Error bars show uncertainity around each group mean; the dashed line is the intercept."},{"path":"https://github.com/MoPlot/MoPlot/articles/One_Way_MoPlot.html","id":"customized-coding","dir":"Articles","previous_headings":"MoPlotOneWay","what":"7 Customized coding","title":"One_Way_MoPlot","text":"MoPlotOneWay() also supports customized contrast coding schemes. can specify contrast matrix factor variable. example using custom contrasts:  raw data coefficient panel:","code":"# Define custom contrasts custom_contrasts <- matrix(c(   1,  1,  0,   1,  -1,  0,   -1, 0,  1,   -1,  0, -1 ), ncol = 3, byrow = TRUE) rownames(custom_contrasts) <- levels(DT$Ind) colnames(custom_contrasts) <- c(\"C1\", \"C2\", \"C3\") contrasts(DT$Ind) <- custom_contrasts  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting with customized contrasts MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> In Contrast_1, the contrast compares: #> - Group 1: Gr._1, Gr._2 (Mean = 124.83, SE = 3.59, 95% CI = [117.8, 131.86]) #> - Group 2: Gr._3, Gr._4 (Mean = 121.57, SE = 3.44, 95% CI = [114.82, 128.32]) #>  #> This contrast evaluates whether the mean of Gr._1, Gr._2 differs from that of Gr._3, Gr._4. #>  #> In Contrast_2, the contrast compares: #> - Group 1: Gr._1 (Mean = 115.78, SE = 4.96, 95% CI = [106.05, 125.5]) #> - Group 2: Gr._2 (Mean = 133.89, SE = 4.43, 95% CI = [125.21, 142.56]) #>  #> This contrast evaluates whether the mean of Gr._1 differs from that of Gr._2. #>  #> In Contrast_3, the contrast compares: #> - Group 1: Gr._3 (Mean = 118.41, SE = 5.29, 95% CI = [108.05, 128.78]) #> - Group 2: Gr._4 (Mean = 124.73, SE = 4.44, 95% CI = [116.03, 133.43]) #>  #> This contrast evaluates whether the mean of Gr._3 differs from that of Gr._4. MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05) #> In Contrast_1, the contrast compares: #> - Group 1: Gr._1, Gr._2 (Mean = 124.83, SE = 3.59, 95% CI = [117.8, 131.86]) #> - Group 2: Gr._3, Gr._4 (Mean = 121.57, SE = 3.44, 95% CI = [114.82, 128.32]) #>  #> This contrast evaluates whether the mean of Gr._1, Gr._2 differs from that of Gr._3, Gr._4. #>  #> In Contrast_2, the contrast compares: #> - Group 1: Gr._1 (Mean = 115.78, SE = 4.96, 95% CI = [106.05, 125.5]) #> - Group 2: Gr._2 (Mean = 133.89, SE = 4.43, 95% CI = [125.21, 142.56]) #>  #> This contrast evaluates whether the mean of Gr._1 differs from that of Gr._2. #>  #> In Contrast_3, the contrast compares: #> - Group 1: Gr._3 (Mean = 118.41, SE = 5.29, 95% CI = [108.05, 128.78]) #> - Group 2: Gr._4 (Mean = 124.73, SE = 4.44, 95% CI = [116.03, 133.43]) #>  #> This contrast evaluates whether the mean of Gr._3 differs from that of Gr._4."},{"path":"https://github.com/MoPlot/MoPlot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Umberto Granziol. Author, maintainer. Marianna Musa. Author. Lorenzo Atzeni. Author. Stefano Dalla Bona. Author.","code":""},{"path":"https://github.com/MoPlot/MoPlot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granziol U, Musa M, Atzeni L, Dalla Bona S (2025). MoPlot: Visualization Contrast-Based Statistical Models. R package version 0.0.0.9000.","code":"@Manual{,   title = {MoPlot: Visualization of Contrast-Based Statistical Models},   author = {Umberto Granziol and Marianna Musa and Lorenzo Atzeni and Stefano {Dalla Bona}},   note = {R package version 0.0.0.9000},   year = {2025}, }"},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"moplot-","dir":"","previous_headings":"","what":"","title":"","text":"MoPlot R package designed visualize linear models include categorical predictors. enhances interpretability complex model outputs clear intuitive graphical representations, particular focus contrasts used categorical variables. highlighting contrasts, MoPlot helps users better understand specific comparisons underlying model estimates.","code":""},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"","text":"can install development version MoPlot like :","code":"devtools::install_github(\"Moplot/Moplot\")"},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"id_1-moplotoneway","dir":"","previous_headings":"","what":"1. MoPlotOneWay","title":"","text":"MoPlotOneWay() function visualizing results linear model one categorical predictor one numeric dependent variable. takes input model created lm() produces plot highlights group means associated uncertainty using bars, visually emphasizes significant contrasts colored lines. Optionally, raw data points can displayed plot. secondary panel shows model coefficients, including standardized beta values effect sizes Cohen’s d, allowing clear informative summary model’s findings. MoPlotOneWay() function supports variety contrast coding schemes categorical predictors, including treatment coding (dummy coding), sum zero coding, Helmert coding, reverse Helmert coding, polynomial coding, sliding difference coding, customized coding.","code":""},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"id_11-default-treatment-coding","dir":"","previous_headings":"1. MoPlotOneWay","what":"1.1 Default Treatment coding","title":"","text":"Treatment coding, dummy coding common way represent categorical variables regression models. transforms categorical predictor k levels k − 1 binary (0/1) variables, comparing one level reference (baseline) category. following example uses classic iris dataset treatment contrasts shows plot without raw data points coefficient panel, using significance level 0.05:  plot, including raw data points coefficient panel, also 0.05 significance level:","code":"library(MoPlot)  # Using Iris data data(iris) iris$Species <- factor(iris$Species) contrasts(iris$Species) <- contr.treatment(3)  # Fit the model model <- lm(Sepal.Length ~ Species, data = iris)  # MoPlotting MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Species is the categorical predictor (represented on the x-axis with its levels), #>  and Sepal.Length is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is treatment, which compares each group mean against #>  the baseline mean of setosa (the first level of the predictor). #>  Blue dots indicate the expected values (means) for each group, while the error bars #>  represent the uncertainty associated with these estimates. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with a significance threshold of 0.05 for the first type of error. # MoPlotting MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.05) #> This graphical representation illustrates the linear model, where #>  Species is the categorical predictor (represented on the x-axis with its levels), #>  and Sepal.Length is the numerical dependent variable (plotted on the y-axis). #>  The contrast type applied is treatment, which compares each group mean against #>  the baseline mean of setosa (the first level of the predictor). #>  Blue dots indicate the expected values (means) for each group, while the error bars #>  represent the uncertainty associated with these estimates. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with a significance threshold of 0.05 for the first type of error."},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"id_12-sum-coding","dir":"","previous_headings":"1. MoPlotOneWay","what":"1.2 Sum coding","title":"","text":"Sum coding another way represent categorical variables regression models. Unlike treatment coding, sum coding compares level overall mean rather specific reference group. following example uses iris dataset sum contrasts, showing plot without raw data points coefficient panel significance level 0.1  plot including raw data points coefficient panel:","code":"# Using Sum coding contrasts(iris$Species) <- contr.sum(3)  # Fit the model model <- lm(Sepal.Length ~ Species, data = iris)  # MoPlotting MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.1) #> This graphical representation depicts the linear model, with #>  Species as the categorical predictor (levels shown on the x-axis), #>  and Sepal.Length as the numerical dependent variable (values displayed on the y-axis). #>  The contrast type is sum, where each group mean is compared to #>  the intercept, which serves as the baseline. #>  Blue dots represent the expected values (means) for each group, and error bars capture #>  the uncertainty associated with these estimates. #>  The dashed purple line marks the intercept expected value. #>  The green error bars highlight significant contrasts, with 0.1 as the threshold for the first type of error. # MoPlotting MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.1)"},{"path":"https://github.com/MoPlot/MoPlot/index.html","id":"id_13-helmert-coding","dir":"","previous_headings":"1. MoPlotOneWay","what":"1.3 Helmert coding","title":"","text":"Helmert coding contrast coding scheme level categorical variable compared mean previous levels. following example uses generated dataset (using DatasetOne()) Helmert contrasts. first shows plot without raw data points coefficient panel significance level 0.05:  plot including raw data points coefficient panel, using 0.2 significance level:","code":"# Using a custom function to generate data with four groups DT <- DatasetOne(n_sample = 20, means = c(120, 135, 115, 120), sds = 20) DT$Ind <- as.factor(DT$Ind) contrasts(DT$Ind) <- contr.helmert(4)  # Fit the model model <- lm(Dep ~ Ind, data = DT)  # MoPlotting sum MoPlotOneWay(model, data = FALSE, coef = FALSE, siglevel = 0.05) #> This graphical representation depicts the linear model, with #>  Ind as the categorical predictor (levels are represented on the x-axis), #>  and Dep as the numerical dependent variable (values are shown on the y-axis). #>  The applied contrast type is helmert. In this type of contrast, each group mean is compared to #>  the cumulative mean of all previous groups. #>  Blue dots represent the expected values (means) for the cumulative means, #>  while orange dots represent the expected values (means) for each individual group. #>  Error bars indicate the uncertainty associated with each expected value. #>  The dashed purple line marks the baseline expected value. #>  Green lines highlight significant contrasts, with 0.05 serving as the threshold for the first type of error. # MoPlotting sum MoPlotOneWay(model, data = TRUE, coef = TRUE, siglevel = 0.2)"},{"path":"https://github.com/MoPlot/MoPlot/reference/ContrastsOnePred.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","title":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","text":"Computes means, standard errors, confidence intervals positive negative components contrast vectors derived categorical predictor.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ContrastsOnePred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","text":"","code":"ContrastsOnePred(predictor, vd, data, sig.level)"},{"path":"https://github.com/MoPlot/MoPlot/reference/ContrastsOnePred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","text":"predictor string specifying name categorical predictor variable data. vd string specifying name numeric dependent variable. data data frame containing variables. sig.level Significance level confidence intervals (e.g., 0.05 95% CI).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ContrastsOnePred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","text":"data frame means, standard errors, confidence intervals contrast group.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ContrastsOnePred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Means and Confidence Intervals for Contrasts in a Single-Predictor Linear Model — ContrastsOnePred","text":"","code":"df <- data.frame(   group = factor(rep(c(\"A\", \"B\", \"C\"), each = 10)),   score = c(rnorm(10, 5), rnorm(10, 6), rnorm(10, 7)) ) contrasts(df$group) <- contr.treatment(3) ContrastsOnePred(\"group\", \"score\", df, 0.05) #>    Contrasto Livelli    Media        Se   CI_low  CI_high #> 1 Contrast_1       B 5.821304 0.3718776 5.092437 6.550171 #> 2 Contrast_1       A 4.558635 0.3534354 3.865915 5.251356 #> 3 Contrast_2       C 6.876441 0.3311147 6.227468 7.525414 #> 4 Contrast_2       A 4.558635 0.3534354 3.865915 5.251356"},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomDescription.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Descriptive Summaries for Custom Contrasts (Internal Use) — CustomDescription","title":"Print Descriptive Summaries for Custom Contrasts (Internal Use) — CustomDescription","text":"Intended internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomDescription.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Descriptive Summaries for Custom Contrasts (Internal Use) — CustomDescription","text":"","code":"CustomDescription(output_contrasti, sig.level = 0.05, digits = 2)"},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomDescription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Descriptive Summaries for Custom Contrasts (Internal Use) — CustomDescription","text":"output_contrasti data frame output sig.level Significance level digits Number decimal places","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomDescription.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Descriptive Summaries for Custom Contrasts (Internal Use) — CustomDescription","text":"return value.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Custom Contrasts and Coefficients from a Linear Model with One Categorical Predictor — CustomPlot","title":"Plot Custom Contrasts and Coefficients from a Linear Model with One Categorical Predictor — CustomPlot","text":"function intended internal usage.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Custom Contrasts and Coefficients from a Linear Model with One Categorical Predictor — CustomPlot","text":"","code":"CustomPlot(   predictor,   vd,   data,   model,   sig.level = 0.05,   show.data = T,   show.coef = T,   facet = TRUE )"},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Custom Contrasts and Coefficients from a Linear Model with One Categorical Predictor — CustomPlot","text":"predictor string. name categorical predictor variable. vd string. name dependent numeric variable. data data frame containing variables. model fitted linear model object (lm()). sig.level Significance level CI p-value coloring (default = 0.05). show.data Logical. Whether show individual data points (default = TRUE). show.coef Logical. Whether show coefficient panel (default = TRUE). facet Logical. Whether facet plot contrast (default = TRUE).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/CustomPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Custom Contrasts and Coefficients from a Linear Model with One Categorical Predictor — CustomPlot","text":"ggplot2::ggplot object (single combined using patchwork::/ layout).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/DatasetOne.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","title":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","text":"function simulates dataset multiple groups (levels one IV), specified mean shared standard deviation. dependent variable continuous, standard deviation constant across groups, emulating homoscedasticity. number observations per group equal, creating balanced design.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/DatasetOne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","text":"","code":"DatasetOne(n_sample, means, sds)"},{"path":"https://github.com/MoPlot/MoPlot/reference/DatasetOne.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","text":"n_sample Number observations per group. means numeric vector group means. sds single numeric value representing shared standard deviation.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/DatasetOne.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","text":"data.frame columns iv (group identifier) dv (dependent variable).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/DatasetOne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Dataset with One Categorical Independent Variable and One Continuous Dependent Variable — DatasetOne","text":"","code":"set.seed(2025) DatasetOne(n_sample = 30, means = c(120, 135, 115), sds = 20) #>      Ind       Dep #> 1  Gr._1 132.41513 #> 2  Gr._1 120.71283 #> 3  Gr._1 135.46309 #> 4  Gr._1 145.44978 #> 5  Gr._1 127.41951 #> 6  Gr._1 116.74291 #> 7  Gr._1 127.94224 #> 8  Gr._1 118.40021 #> 9  Gr._1 113.10070 #> 10 Gr._1 134.04303 #> 11 Gr._1 112.08607 #> 12 Gr._1  84.89892 #> 13 Gr._1 111.58072 #> 14 Gr._1 135.29819 #> 15 Gr._1 141.32324 #> 16 Gr._1 116.12607 #> 17 Gr._1 118.95706 #> 18 Gr._1 128.35342 #> 19 Gr._1  93.74612 #> 20 Gr._1 168.58038 #> 21 Gr._1 115.10859 #> 22 Gr._1 134.67571 #> 23 Gr._1 177.05563 #> 24 Gr._1 133.43051 #> 25 Gr._1 117.68301 #> 26 Gr._1  93.97296 #> 27 Gr._1 101.64399 #> 28 Gr._1 121.01432 #> 29 Gr._1 112.39734 #> 30 Gr._1 134.45250 #> 31 Gr._2 114.48485 #> 32 Gr._2 171.39741 #> 33 Gr._2 109.59165 #> 34 Gr._2 146.77632 #> 35 Gr._2 122.31493 #> 36 Gr._2 109.68369 #> 37 Gr._2 140.67498 #> 38 Gr._2 105.36478 #> 39 Gr._2 153.23759 #> 40 Gr._2 154.42938 #> 41 Gr._2 160.46254 #> 42 Gr._2 164.24537 #> 43 Gr._2 122.77834 #> 44 Gr._2 127.78894 #> 45 Gr._2 104.41696 #> 46 Gr._2 157.66528 #> 47 Gr._2 126.18522 #> 48 Gr._2 137.59210 #> 49 Gr._2 152.42465 #> 50 Gr._2 145.11029 #> 51 Gr._2 142.41785 #> 52 Gr._2 110.43981 #> 53 Gr._2 131.75605 #> 54 Gr._2 156.76143 #> 55 Gr._2 142.18403 #> 56 Gr._2 156.34382 #> 57 Gr._2 147.56758 #> 58 Gr._2 118.36842 #> 59 Gr._2 121.15229 #> 60 Gr._2 134.10420 #> 61 Gr._3 126.89138 #> 62 Gr._3 127.78202 #> 63 Gr._3 124.58844 #> 64 Gr._3 142.46125 #> 65 Gr._3  92.04632 #> 66 Gr._3  65.98603 #> 67 Gr._3  96.94874 #> 68 Gr._3 107.05137 #> 69 Gr._3 149.33729 #> 70 Gr._3 106.78493 #> 71 Gr._3 113.16433 #> 72 Gr._3 100.06994 #> 73 Gr._3  98.56609 #> 74 Gr._3  68.65961 #> 75 Gr._3 104.29331 #> 76 Gr._3 134.94760 #> 77 Gr._3 104.09564 #> 78 Gr._3 145.19298 #> 79 Gr._3 100.12323 #> 80 Gr._3 101.65122 #> 81 Gr._3  92.58214 #> 82 Gr._3 144.40086 #> 83 Gr._3 119.10513 #> 84 Gr._3  93.77516 #> 85 Gr._3 114.98050 #> 86 Gr._3 114.51106 #> 87 Gr._3 141.08352 #> 88 Gr._3  95.15862 #> 89 Gr._3  94.02833 #> 90 Gr._3 135.17277"},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Contrast and Hypothesis Matrices from a Model — ExtractMatrices","title":"Extract Contrast and Hypothesis Matrices from a Model — ExtractMatrices","text":"internal usage.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Contrast and Hypothesis Matrices from a Model — ExtractMatrices","text":"","code":"ExtractMatrices(model, data)"},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Contrast and Hypothesis Matrices from a Model — ExtractMatrices","text":"model fitted model object data data frame used fit model","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Contrast and Hypothesis Matrices from a Model — ExtractMatrices","text":"named list","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Effect Sizes and Standardized Coefficients from a Regression Model — ExtractParams","title":"Extract Effect Sizes and Standardized Coefficients from a Regression Model — ExtractParams","text":"Calculates Cohen's d standardized coefficients.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Effect Sizes and Standardized Coefficients from a Regression Model — ExtractParams","text":"","code":"ExtractParams(model)"},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Effect Sizes and Standardized Coefficients from a Regression Model — ExtractParams","text":"model fitted regression model object.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ExtractParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Effect Sizes and Standardized Coefficients from a Regression Model — ExtractParams","text":"data frame.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/FindOrthogonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Factor Variables with Orthogonal Contrasts — FindOrthogonal","title":"Identify Factor Variables with Orthogonal Contrasts — FindOrthogonal","text":"internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/FindOrthogonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Factor Variables with Orthogonal Contrasts — FindOrthogonal","text":"","code":"FindOrthogonal(model)"},{"path":"https://github.com/MoPlot/MoPlot/reference/FindOrthogonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Factor Variables with Orthogonal Contrasts — FindOrthogonal","text":"model fitted model object","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/FindOrthogonal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Factor Variables with Orthogonal Contrasts — FindOrthogonal","text":"character vector variable names whose contrast matrices orthogonal.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/GroupContrastCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Contrast Columns by Interaction Structure — GroupContrastCol","title":"Group Contrast Columns by Interaction Structure — GroupContrastCol","text":"internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/GroupContrastCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Contrast Columns by Interaction Structure — GroupContrastCol","text":"","code":"GroupContrastCol(contrast_matrix, data, model)"},{"path":"https://github.com/MoPlot/MoPlot/reference/GroupContrastCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Contrast Columns by Interaction Structure — GroupContrastCol","text":"contrast_matrix design contrast matrix data original data frame used fit model model fitted model object","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/GroupContrastCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Contrast Columns by Interaction Structure — GroupContrastCol","text":"named list","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/IntMeanCont.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Grouped Means and Confidence Intervals for an Interaction Contrast — IntMeanCont","title":"Compute Grouped Means and Confidence Intervals for an Interaction Contrast — IntMeanCont","text":"internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/IntMeanCont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Grouped Means and Confidence Intervals for an Interaction Contrast — IntMeanCont","text":"","code":"IntMeanCont(interaction_name, model, data, vd, sig.level = 0.05)"},{"path":"https://github.com/MoPlot/MoPlot/reference/IntMeanCont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Grouped Means and Confidence Intervals for an Interaction Contrast — IntMeanCont","text":"interaction_name character string naming interaction term (e.g., \":B\"). model fitted model object (e.g., lm()). data data frame used fit model. vd string specifying name dependent (response) variable. sig.level Significance level computing confidence intervals (default 0.05).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/IntMeanCont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Grouped Means and Confidence Intervals for an Interaction Contrast — IntMeanCont","text":"named list data frames","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/InterpretationScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Interpretation Score for Categorical Contrasts — InterpretationScore","title":"Compute Interpretation Score for Categorical Contrasts — InterpretationScore","text":"internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/InterpretationScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Interpretation Score for Categorical Contrasts — InterpretationScore","text":"","code":"InterpretationScore(variabile, tol = 1e-08)"},{"path":"https://github.com/MoPlot/MoPlot/reference/InterpretationScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Interpretation Score for Categorical Contrasts — InterpretationScore","text":"variabile factor categorical variable tol numeric tolerance (default 1e-8)","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/InterpretationScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Interpretation Score for Categorical Contrasts — InterpretationScore","text":"integer interpretation score","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"Visualizes one-way linear model single categorical predictor numeric dependent variable. Supports multiple contrast types including treatment, sum, successive differences (sdif), Helmert, reverse Helmert, polynomial customized contrasts.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"","code":"MoPlotOneWay(   LinearMod,   data = FALSE,   siglevel = 0.05,   coef = FALSE,   facet.pers = TRUE )"},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"LinearMod fitted linear model object (lm()) one numeric response one categorical predictor. data Logical. TRUE, overlays individual data points plot (default: FALSE). siglevel Numeric. Significance level testing contrasts confidence intervals (default: 0.05). coef Logical. TRUE, adds second panel coefficients standardized effect sizes (default: FALSE). facet.pers Logical. TRUE personalized contrasts seen one one (default: FALSE).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"ggplot2 plot object combined plot (patchwork) coef = TRUE.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"plot shows means, confidence intervals, significance contrasts, optionally overlays raw data points. also display standardized coefficients effect sizes. Supported contrast types interpretations: Treatment: group compared baseline (first level). Sum: Contrasts compare group grand mean. Successive differences (sdif): group compared previous one. Helmert: group compared mean previous groups. Reverse Helmert: group compared mean subsequent groups. Polynomial: Contrasts test polynomial trends across ordered factor levels. Customized: User-defined contrasts. Error bars represent 95% confidence intervals. Significant contrasts highlighted according chosen significance level. coefficient panel (enabled) shows coefficient estimates confidence intervals standardized effect sizes.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/MoPlotOneWay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot One-Way Linear Model Highlighting Contrasts — MoPlotOneWay","text":"","code":"if (FALSE) { # \\dontrun{   data(iris)   iris$Species <- factor(iris$Species)   model <- lm(Sepal.Length ~ Species, data = iris)   MoPlotOneWay(model, data = TRUE, coef = TRUE) } # }"},{"path":"https://github.com/MoPlot/MoPlot/reference/ModelContrastTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the Structure of a Linear Model — ModelContrastTable","title":"Visualizing the Structure of a Linear Model — ModelContrastTable","text":"function takes linear model object created lm() function returns tabular summaries describing model structure. reports number types variables, levels factors, type contrast matrices applied categorical predictors.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ModelContrastTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the Structure of a Linear Model — ModelContrastTable","text":"","code":"ModelContrastTable(LinearModel, type = \"all\")"},{"path":"https://github.com/MoPlot/MoPlot/reference/ModelContrastTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the Structure of a Linear Model — ModelContrastTable","text":"LinearModel linear model object created using lm(). type character string specifying type table return. Options include: \"\" (default): Returns model-level variable-level summaries. \"summary\": Returns model-level summary. \"x&y\": Returns variable-level summary (including dependent independent variables). \"x\": Returns summary independent variables . \"y\": Returns summary dependent variable .","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ModelContrastTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the Structure of a Linear Model — ModelContrastTable","text":"table list tables summarizing structure model, depending type argument: \"\": list containing model-level variable-level summary tables. \"summary\": data frame summarizing overall model structure. \"x&y\": data frame variable names, types, levels, contrast types. \"x\" \"y\": data frame focused specified subset variables.","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ModelContrastTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualizing the Structure of a Linear Model — ModelContrastTable","text":"","code":"# Creating a linear model with the generative function DT <- DatasetOne(n_sample = 30, means = c(120, 135, 115), sds = 20) DT$Ind <- as.factor(DT$Ind) model <- lm(Dep ~ Ind, data = DT)  # Without specifing the additional parameters (All tables by default) ModelContrastTable(model) #> $`Model-Level Summary` #>                      Metric     Value #> 1           Total Variables         2 #> 2       Dependent Variables         1 #> 3                Predictors         1 #> 4              Interactions         0 #> 5   Dependent Variable Name       Dep #> 6  Dependent Variable Types   numeric #> 7          Dependent Levels       Num #> 8           Predictor Names       Ind #> 9           Predictor Types    factor #> 10         Predictor Levels         3 #> 11    Contrast Matrix Types treatment #>  #> $`Variable-Level Summary` #>   Variable    Type Levels Contrast_Matrix_Type #> 1      Dep numeric    Num                 <NA> #> 2      Ind  factor      3            treatment #>   # Function with only indipendent variables informations ModelContrastTable(model, type = \"x\") #>   Variable   Type Levels Contrast_Matrix_Type #> 2      Ind factor      3            treatment"},{"path":"https://github.com/MoPlot/MoPlot/reference/ReverseHelmert.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Reverse Helmert Contrast Matrix — ReverseHelmert","title":"Generate Reverse Helmert Contrast Matrix — ReverseHelmert","text":"Creates reverse Helmert contrast matrix size n x (n - 1). internal usage","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ReverseHelmert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Reverse Helmert Contrast Matrix — ReverseHelmert","text":"","code":"ReverseHelmert(n)"},{"path":"https://github.com/MoPlot/MoPlot/reference/ReverseHelmert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Reverse Helmert Contrast Matrix — ReverseHelmert","text":"n Integer. number levels factor (must >= 2).","code":""},{"path":"https://github.com/MoPlot/MoPlot/reference/ReverseHelmert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Reverse Helmert Contrast Matrix — ReverseHelmert","text":"numeric matrix","code":""}]
